# =============================================================================
# ENVIRONMENT CONFIGURATION FILE
# =============================================================================
# This file contains environment variables for the Express.js Hello World application.
# This file should never be committed to version control.
# Copy .env.example to .env and modify values as needed for your environment.

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Server configuration
PORT=3000
NODE_ENV=development
HOSTNAME=127.0.0.1

# Application metadata
APP_NAME=hello-world-express
APP_VERSION=1.0.0
SERVICE_NAME=hello-world-app

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Winston logging configuration
LOG_LEVEL=debug
LOG_FORMAT=json
LOG_DIR=logs
LOG_MAX_SIZE=20m
LOG_MAX_FILES=5

# Morgan HTTP request logging
MORGAN_FORMAT=combined
MORGAN_SKIP_SUCCESSFUL_REQUESTS=false

# Log rotation settings
LOG_ROTATION_DATE_PATTERN=YYYY-MM-DD
LOG_ROTATION_FREQUENCY=daily
LOG_AUDIT_FILE=logs/.audit.json

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# CORS configuration
CORS_ORIGIN=http://localhost:3000,http://127.0.0.1:3000
CORS_METHODS=GET,HEAD,PUT,PATCH,POST,DELETE
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With
CORS_CREDENTIALS=false
CORS_MAX_AGE=86400

# Helmet security headers
HELMET_CSP_ENABLED=true
HELMET_HSTS_MAX_AGE=31536000
HELMET_FRAME_GUARD=deny
HELMET_NO_SNIFF=true

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_DELAY_MS=0
RATE_LIMIT_SKIP_SUCCESSFUL_REQUESTS=false

# Session security (for future use)
SESSION_SECRET=your-super-secret-session-key-change-in-production
SESSION_MAX_AGE=3600000
SESSION_SECURE=false
SESSION_HTTP_ONLY=true

# =============================================================================
# PM2 PROCESS MANAGEMENT
# =============================================================================

# Cluster configuration
PM2_INSTANCES=max
PM2_EXEC_MODE=cluster
PM2_MAX_MEMORY_RESTART=100M
PM2_MIN_UPTIME=10s
PM2_MAX_RESTARTS=15
PM2_RESTART_DELAY=4000

# PM2 monitoring
PM2_MONITORING_ENABLED=true
PM2_LOG_DATE_FORMAT=YYYY-MM-DD HH:mm:ss Z

# =============================================================================
# DATABASE CONFIGURATION (PLACEHOLDERS FOR FUTURE USE)
# =============================================================================

# Primary database connection
# DATABASE_URL=postgresql://username:password@localhost:5432/hello_world_db
# DATABASE_HOST=localhost
# DATABASE_PORT=5432
# DATABASE_NAME=hello_world_db
# DATABASE_USER=hello_world_user
# DATABASE_PASSWORD=your-database-password
# DATABASE_SSL=false
# DATABASE_POOL_MIN=2
# DATABASE_POOL_MAX=10
# DATABASE_TIMEOUT=30000

# Redis cache configuration (for future use)
# REDIS_URL=redis://localhost:6379
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=your-redis-password
# REDIS_DB=0
# REDIS_TIMEOUT=5000
# REDIS_RETRY_DELAY_ON_FAILURE=100
# REDIS_MAX_RETRY_ATTEMPTS=3

# =============================================================================
# API KEYS AND SECRETS (PLACEHOLDERS FOR FUTURE USE)
# =============================================================================

# JWT Authentication (for future use)
# JWT_SECRET=your-jwt-secret-key-change-in-production
# JWT_EXPIRES_IN=24h
# JWT_REFRESH_EXPIRES_IN=7d
# JWT_ISSUER=hello-world-app
# JWT_AUDIENCE=hello-world-users

# Third-party API keys (for future use)
# EXTERNAL_API_KEY=your-external-api-key
# EXTERNAL_API_SECRET=your-external-api-secret
# EXTERNAL_API_BASE_URL=https://api.external-service.com
# EXTERNAL_API_TIMEOUT=30000
# EXTERNAL_API_RATE_LIMIT=1000

# Email service configuration (for future use)  
# EMAIL_SERVICE=smtp
# EMAIL_HOST=smtp.example.com
# EMAIL_PORT=587
# EMAIL_USER=your-email@example.com
# EMAIL_PASSWORD=your-email-password
# EMAIL_FROM=noreply@hello-world-app.com
# EMAIL_SECURE=false

# Cloud storage configuration (for future use)
# CLOUD_STORAGE_PROVIDER=aws
# CLOUD_STORAGE_BUCKET=hello-world-uploads
# CLOUD_STORAGE_REGION=us-east-1
# CLOUD_STORAGE_ACCESS_KEY=your-access-key
# CLOUD_STORAGE_SECRET_KEY=your-secret-key

# =============================================================================
# MONITORING AND OBSERVABILITY (FOR FUTURE USE)
# =============================================================================

# Metrics collection (Prometheus)
# PROMETHEUS_ENABLED=false
# PROMETHEUS_ENDPOINT=/metrics
# PROMETHEUS_PORT=9090
# PROMETHEUS_COLLECT_DEFAULT_METRICS=true

# Distributed tracing (OpenTelemetry)
# OTEL_ENABLED=false
# OTEL_SERVICE_NAME=hello-world-app
# OTEL_COLLECTOR_URL=http://localhost:4317
# OTEL_TRACE_SAMPLING_RATE=0.1

# Health check configuration
HEALTH_CHECK_ENDPOINT=/health
HEALTH_CHECK_TIMEOUT=5000
HEALTH_CHECK_INTERVAL=30000

# Application performance monitoring
# APM_ENABLED=false
# APM_SERVICE_NAME=hello-world-app
# APM_SERVER_URL=http://localhost:8200
# APM_SECRET_TOKEN=your-apm-secret-token

# =============================================================================
# DEVELOPMENT TOOLS CONFIGURATION
# =============================================================================

# Development server options
DEV_AUTO_RESTART=true
DEV_WATCH_EXTENSIONS=js,json,env
DEV_IGNORE_PATTERNS=node_modules/**,logs/**,.git/**
DEV_DELAY=1000

# Debug configuration
DEBUG_ENABLED=true
DEBUG_NAMESPACES=app:*,express:*
DEBUG_COLORS=true
DEBUG_DEPTH=2
DEBUG_SHOW_HIDDEN=false

# =============================================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# =============================================================================
# These values can be overridden in environment-specific files:
# - .env.development (for development environment)
# - .env.staging (for staging environment) 
# - .env.production (for production environment)
# - .env.test (for testing environment)